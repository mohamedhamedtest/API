{
	"info": {
		"_postman_id": "bd13f135-1666-4593-bf90-081606b312b7",
		"name": "Simple Grocery Store API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "41748454"
	},
	"item": [
		{
			"name": "Start programe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{basicUrl}}/status",
					"host": [
						"{{basicUrl}}"
					],
					"path": [
						"status"
					]
				}
			},
			"response": []
		},
		{
			"name": "List all products",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Check first item ID\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].id).to.eql(4643); // استبدل 4643 بالرقم المتوقع\r",
							"});\r",
							"\r",
							"pm.test(\"coffee coffe\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.some(user => user.category === \"coffee\")).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Extract only 'id'\", function () {\r",
							"    let jsonData = pm.response.json();\r",
							"    let ids = jsonData.map(item => item.id); // استخراج كل قيم id\r",
							"    console.log(ids); // طباعة ids في Console\r",
							"});\r",
							"pm.test(\"Log id values\", function () {\r",
							"    let jsonData = pm.response.json();\r",
							"    jsonData.forEach(item => console.log(\"ID:\", item.id)); // طباعة كل القيم\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{basicUrl}}/products?category=coffee&results=",
					"host": [
						"{{basicUrl}}"
					],
					"path": [
						"products"
					],
					"query": [
						{
							"key": "category",
							"value": "coffee"
						},
						{
							"key": "results",
							"value": ""
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Single Product",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{basicUrl}}/products/:productId",
					"host": [
						"{{basicUrl}}"
					],
					"path": [
						"products",
						":productId"
					],
					"variable": [
						{
							"key": "productId",
							"value": "4643"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "creat cart",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"});\r",
							"var template = `\r",
							"<style type=\"text/css\">\r",
							"    .tftable {font-size:14px;color:#333333;width:100%;border-width: 1px;border-color: #87ceeb;border-collapse: collapse;}\r",
							"    .tftable th {font-size:18px;background-color:#87ceeb;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;text-align:left;}\r",
							"    .tftable tr {background-color:#ffffff;}\r",
							"    .tftable td {font-size:14px;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;}\r",
							"    .tftable tr:hover {background-color:#e0ffff;}\r",
							"</style>\r",
							"\r",
							"<table class=\"tftable\" border=\"1\">\r",
							"    <tr>\r",
							"        <th>Error</th>\r",
							"    </tr>\r",
							"    <tr>\r",
							"        <td>{{response.error}}</td>\r",
							"    </tr>\r",
							"</table>\r",
							"`;\r",
							"\r",
							"function constructVisualizerPayload() {\r",
							"    return { response: pm.response.json() }\r",
							"}\r",
							"\r",
							"pm.visualizer.set(template, constructVisualizerPayload());"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{basicUrl}}/carts/",
					"host": [
						"{{basicUrl}}"
					],
					"path": [
						"carts",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Add an item to cart",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"});\r",
							"\r",
							"pm.test(\"Check first item ID\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.items[0].id).to.eql(859155397); // استبدل 4643 بالرقم المتوقع\r",
							"});\r",
							"\r",
							"pm.test(\"check productId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    var productIdExists = jsonData.items.some(item => item.productId === 4643);\r",
							"    pm.expect(productIdExists).to.be.true;\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n            \r\n            \"productId\": 1225,\r\n            \"quantity\": 4\r\n        }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{basicUrl}}/carts/0RL0HOjLZLytSgJAVHveQ/",
					"host": [
						"{{basicUrl}}"
					],
					"path": [
						"carts",
						"0RL0HOjLZLytSgJAVHveQ",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Modify an item in the cart",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": " {\r\n        \r\n        \"quantity\": 5\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{basicUrl}}/carts/:cartId/",
					"host": [
						"{{basicUrl}}"
					],
					"path": [
						"carts",
						":cartId",
						""
					],
					"variable": [
						{
							"key": "cartId",
							"value": "{{cartId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Replace an item in the cart",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n        \r\n        \"productId\": 6483,\r\n        \"quantity\": 2\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{basicUrl}}/carts/:cartId/items/:itemId",
					"host": [
						"{{basicUrl}}"
					],
					"path": [
						"carts",
						":cartId",
						"items",
						":itemId"
					],
					"variable": [
						{
							"key": "cartId",
							"value": "{{cartId}}"
						},
						{
							"key": "itemId",
							"value": "650695129"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete an item in the cart",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": " {\r\n        \r\n        \"quantity\": 5\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{basicUrl}}/carts/:cartId/items/:itemId",
					"host": [
						"{{basicUrl}}"
					],
					"path": [
						"carts",
						":cartId",
						"items",
						":itemId"
					],
					"variable": [
						{
							"key": "cartId",
							"value": "{{cartId}}"
						},
						{
							"key": "itemId",
							"value": ""
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Register a new API client",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"clientName\": \"mohamed hamedd\",\r\n   \"clientEmail\": \"mohamedhadmed@example.com\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{basicUrl}}/api-clients",
					"host": [
						"{{basicUrl}}"
					],
					"path": [
						"api-clients"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a new order",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"cartId\": \"{{cartId}}\",\r\n    \"customerName\": \"m hamed \",\r\n    \"comment\":\"hallow\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{basicUrl}}/orders",
					"host": [
						"{{basicUrl}}"
					],
					"path": [
						"orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a single order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"});\r",
							"\r",
							"pm.test(\"Check first item ID\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].items[0].id).to.eql(859155397); // استبدل 4643 بالرقم المتوقع\r",
							"});\r",
							"\r",
							"pm.test(\"Check if any item has quantity = 5\", function () {\r",
							"    var jsonData = pm.response.json();  \r",
							"    var itemsArray = jsonData[0].items; // الوصول إلى المصفوفة داخل الكائن الأول\r",
							"\r",
							"    var hasQuantityFive = itemsArray.some(item => item.productId === 4646);\r",
							"\r",
							"    pm.expect(hasQuantityFive).to.be.true;\r",
							"});\r",
							"pm.test(\"coffee coffe\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].items.some(user => user.quantity === 5)).to.be.true;\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{basicUrl}}/orders/",
					"host": [
						"{{basicUrl}}"
					],
					"path": [
						"orders",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Update an order",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n \"customerName\": \"gggggg\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{basicUrl}}/orders/:orderId",
					"host": [
						"{{basicUrl}}"
					],
					"path": [
						"orders",
						":orderId"
					],
					"variable": [
						{
							"key": "orderId",
							"value": "{{orderId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete an order",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n \"customerName\": \"gggggg\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{basicUrl}}/orders/",
					"host": [
						"{{basicUrl}}"
					],
					"path": [
						"orders",
						""
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "basicUrl",
			"value": "https://simple-grocery-store-api.glitch.me",
			"type": "default"
		},
		{
			"key": "cartId",
			"value": "0RL0HOjLZLytSgJAVHveQ",
			"type": "string"
		},
		{
			"key": "accessToken",
			"value": "",
			"type": "string"
		},
		{
			"key": "orderId",
			"value": "",
			"type": "string"
		}
	]
}